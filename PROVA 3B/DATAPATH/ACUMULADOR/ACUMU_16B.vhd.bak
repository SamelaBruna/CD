entity ACUMU_16B is 
 port(
    
  CLK_ACUMU : in bit;    
  LD_ACUMU,CLR_ACUMU,PRE_ACUMU: in bit;
   I_Acumulador : in bit_vector(15 downto 0);
    S_acumulador : out bit_vector(15 downto 0));
   
end ACUMU_16B;


architecture ckt of ACUMU_16B is

component SUM_16B is 
 port(
 
  NUM1_16B,NUM2_16B : in bit_vector(15 downto 0);
   CIN_SUM_16B : in bit;
    COUT_SUM_16B : out bit;
     S_SUM_16B : out bit_vector(15 downto 0));
  
end component;


component REG_16B is

port ( 
    CLK_REG,CLR_REG,LD_REG,PRE_REG: in BIT;
        D_16B : in bit_vector (15 downto 0);
          Q_16B :out bit_vector(15 downto 0));

end component;





signal saidasomador : bit_vector(15 downto 0);
signal qaux : bit_vector(15 downto 0);

begin

S_acumulador <= qaux;



incremento : SUM_16B port map(

 S_SUM_16B=>saidasomador,
  NUM1_16B=>I_acumulador,
   NUM2_16B=> qaux,
    CIN_SUM_16B=>'0');
     
     
registrador : REG_16B port map(

CLK_REG =>CLK_ACUMU,
CLR_REG =>CLR_ACUMU,
LD_REG =>LD_ACUMU,
PRE_REG =>PRE_ACUMU,
D_166B =>saidasomador,
Q_16B =>qaux);      


  
end ckt;



